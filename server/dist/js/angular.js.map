{"version":3,"sources":["js/angular.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","awesomeThings","AuthService","this","login","title","year","logout","service","$rootScope","$http","currentUser","credentials","post","then","data","user","console","log","error","get","$q","getNews","request","method","handleSuccess","handleError","addNews","content","params","action","removeNews","id","response","isObject","message","reject"],"mappings":"AAAA,YAUAA,SACGC,OAAO,aACN,YACA,SACA,YACA,aACA,aACA,UACA,aACA,UACA,cAEDC,QAAQ,iBAAkB,qBAAsB,SAAUC,EAAgBC,GACzEA,EAAmBC,UAAU,SAE7BF,EACGG,MAAM,QACLC,IAAK,QACLC,YAAa,qBACbC,WAAY,aAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,sBACbC,WAAY,cAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,0BACbC,WAAY,kBAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,sBACbC,WAAY,cAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,sBACbC,WAAY,uBAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,yBACbC,WAAY,oBAcpBT,QAAQC,OAAO,aACZQ,WAAW,YAAa,SAAUC,GACjCA,EAAOC,eACL,oBACA,YACA,WAaNX,QAAQC,OAAO,aACZQ,WAAW,YAAa,SAAUC,GACjCA,EAAOC,eACL,oBACA,YACA,WAaNX,QAAQC,OAAO,aACZQ,WAAW,gBAAiB,SAAUC,GACrCA,EAAOC,eACL,oBACA,YACA,WAaNX,QAAQC,OAAO,aACZQ,WAAW,aAAc,cAAe,SAAUG,GAC/CC,KAAKC,MAAQF,EAAYE,SAa/Bd,QAAQC,OAAO,aACZQ,WAAW,WAAY,WACtBI,KAAKE,MAAQ,YACbF,KAAKG,KAAO,OAYhBhB,QAAQC,OAAO,aACbQ,WAAW,cAAe,cAAe,SAAUG,GACnDC,KAAKI,OAASL,EAAYK,UAa5BjB,QAAQC,OAAO,aACZQ,WAAW,YAAa,SAAU,SAAUC,OAY/CV,QAAQC,OAAO,aACZQ,WAAW,eAAgB,SAAUC,GACpCA,EAAOC,eACL,oBACA,YACA,WAaNX,QAAQC,OAAO,aACViB,QAAQ,eAAgB,aAAc,QAAS,SAAUC,EAAYC,GAClE,GAAIR,GAAcC,IAElBD,GAAYS,YAAc,KAE1BT,EAAYE,MAAQ,SAASQ,GACzBF,EAAMG,KAAK,eAAeC,KAAK,SAAiBC,GAC5Cb,EAAYS,YAAcI,EAAKC,KAC/BC,QAAQC,IAAIP,YAAc,kBAC3B,QAASQ,GAAMA,GACdF,QAAQC,IAAIC,MAIpBjB,EAAYK,OAAS,WACjBG,EAAMU,IAAI,gBAAgBN,KAAK,WAC3BZ,EAAYS,YAAc,KAC1BM,QAAQC,IAAI,oBACb,QAASC,GAAMA,GACdF,QAAQC,IAAIC,SAe5B7B,QAAQC,OAAO,aACZiB,QAAQ,eAAgB,QAAS,KAAM,SAAUE,EAAOW,GAGrD,QAASC,KACL,GAAIC,GAAUb,GACVc,OAAQ,MACR3B,IAAK,aAET,OAAO0B,GAAQT,KAAKW,EAAeC,GAGvC,QAASC,GAAQtB,EAAOuB,GACtB,GAAIL,GAAUb,GACVc,OAAQ,OACR3B,IAAK,WACLgC,QACEC,OAAQ,OAEVf,MACEV,MAAOA,EACPuB,QAASA,IAGf,OAAOL,GAAQT,KAAKW,EAAeC,GAGrC,QAASK,GAAWC,GAClB,GAAIT,GAAUb,GACVc,OAAQ,SACR3B,IAAK,WACLgC,QACEC,OAAQ,UAEVf,MACEiB,GAAIA,IAGV,OAAOT,GAAQT,KAAKW,EAAeC,GAIrC,QAASA,GAAYO,GACjB,MAAK3C,SAAQ4C,SAASD,EAASlB,OAAUkB,EAASlB,KAAKoB,QAG9Cd,EAAGe,OAAOH,EAASlB,KAAKoB,SAFxBd,EAAGe,OAAO,4BAMvB,QAASX,GAAcQ,GACnB,MAAOA,GAASlB,KAKpB,OACIO,QAASA,EACTK,QAASA,EACTI,WAAYA","file":"js/angular.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name clientApp\r\n * @description\r\n * # clientApp\r\n *\r\n * Main module of the application.\r\n */\r\nangular\r\n  .module('clientApp', [\r\n    'ngAnimate',\r\n    'ngAria',\r\n    'ngCookies',\r\n    'ngMessages',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'ngSanitize',\r\n    'ngTouch',\r\n    'ui.router'\r\n  ])\r\n  .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\r\n    $urlRouterProvider.otherwise('/news');\r\n\r\n    $stateProvider\r\n      .state('news', {\r\n        url: '/news',\r\n        templateUrl: 'partials/news.html',\r\n        controller: 'NewsCtrl'\r\n      })\r\n      .state('about', {\r\n        url: '/about',\r\n        templateUrl: 'partials/about.html',\r\n        controller: 'AboutCtrl'\r\n      })\r\n      .state('companies', {\r\n        url: '/companies',\r\n        templateUrl: 'partials/companies.html',\r\n        controller: 'CompaniesCtrl'\r\n      })\r\n      .state('board', {\r\n        url: '/board',\r\n        templateUrl: 'partials/board.html',\r\n        controller: 'BoardCtrl'\r\n      })\r\n      .state('login', {\r\n        url: '/login',\r\n        templateUrl: 'partials/login.html',\r\n        controller: 'LoginCtrl as LOGIN'\r\n      })\r\n      .state('register', {\r\n        url: '/register',\r\n        templateUrl: 'partials/register.html',\r\n        controller: 'RegisterCtrl'\r\n      });\r\n      \r\n  }]);\r\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name clientApp.controller:AboutCtrl\n * @description\n * # AboutCtrl\n * Controller of the clientApp\n */\nangular.module('clientApp')\n  .controller('AboutCtrl', function ($scope) {\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n\n'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name clientApp.controller:BoardCtrl\r\n * @description\r\n * # BoardCtrl\r\n * Controller of the clientApp\r\n */\r\nangular.module('clientApp')\r\n  .controller('BoardCtrl', function ($scope) {\r\n    $scope.awesomeThings = [\r\n      'HTML5 Boilerplate',\r\n      'AngularJS',\r\n      'Karma'\r\n    ];\r\n  });\r\n\n'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name clientApp.controller:CompaniesCtrl\r\n * @description\r\n * # CompaniesCtrl\r\n * Controller of the clientApp\r\n */\r\nangular.module('clientApp')\r\n  .controller('CompaniesCtrl', function ($scope) {\r\n    $scope.awesomeThings = [\r\n      'HTML5 Boilerplate',\r\n      'AngularJS',\r\n      'Karma'\r\n    ];\r\n  });\r\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name clientApp.controller:LoginCtrl\n * @description\n * # LoginCtrl\n * Controller of the clientApp\n */\nangular.module('clientApp')\n  .controller('LoginCtrl', ['AuthService', function (AuthService) {\n      this.login = AuthService.login;\n\n    }]);\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name clientApp.controller:MainCtrl\n * @description\n * # MainCtrl\n * This controller is defined for the whole app as 'app'. Every variable, function, etc. defined in this controller will be available in the whole application. Use this to define global app variables.\n */\nangular.module('clientApp')\n  .controller('MainCtrl', function () {\n  \t\tthis.title = 'E&T-Dagen';\n  \t\tthis.year = 2016;\n    });\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name clientApp.controller:NavbarCtrl\n * @description\n * # NavbarCtrl\n * Controller of the clientApp\n */\nangular.module('clientApp')\n\t.controller('NavbarCtrl', ['AuthService', function (AuthService) {\n\t\tthis.logout = AuthService.logout;\n\t}]);\n    \n\n'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name clientApp.controller:NewsCtrl\r\n * @description\r\n * # NewsCtrl\r\n * Controller of the clientApp\r\n */\r\nangular.module('clientApp')\r\n  .controller('NewsCtrl', ['$scope', function ($scope) {\r\n  }]);\r\n\n'use strict';\n\n/**\n * @ngdoc function\n * @name clientApp.controller:RegisterCtrl\n * @description\n * # RegisterCtrl\n * Controller of the clientApp\n */\nangular.module('clientApp')\n  .controller('RegisterCtrl', function ($scope) {\n    $scope.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n\n'use strict';\n\n/**\n * @ngdoc service\n * @name clientApp.AuthService\n * @description\n * # AuthService\n * This service implements authorization in the clientApp. Use $rootScope only to broadcast events.\n */\nangular.module('clientApp')\n    .service('AuthService', ['$rootScope', '$http', function ($rootScope, $http) {\n        var AuthService = this;\n\n        AuthService.currentUser = null;\n\n        AuthService.login = function(credentials){\n            $http.post('/auth/login').then(function success(data){\n                AuthService.currentUser = data.user;\n                console.log(currentUser + ' is logged in');\n            }, function error(error){\n                console.log(error);\n            });\n        }\n\n        AuthService.logout = function(){\n            $http.get('/auth/logout').then(function success(){\n                AuthService.currentUser = null;\n                console.log('User logged out');\n            }, function error(error){\n                console.log(error);\n            });          \n        }\n\n    }]);\n\n'use strict';\n\n/**\n * @ngdoc service\n * @name clientApp.news\n * @description\n * # news\n * Service in the clientApp.\n */\nangular.module('clientApp')\n  .service('newsService', ['$http', '$q', function ($http, $q) {\n\n      // Public service methods\n      function getNews(){\n          var request = $http({\n              method: 'GET',\n              url: '/api/news'\n          });\n          return request.then(handleSuccess, handleError);\n      }\n\n      function addNews(title, content){\n        var request = $http({\n            method: 'POST',\n            url: 'api/news',\n            params: {\n              action: 'add'\n            },\n            data: {\n              title: title,\n              content: content\n            }\n        });\n        return request.then(handleSuccess, handleError);\n      }\n\n      function removeNews(id){\n        var request = $http({\n            method: 'DELETE',\n            url: 'api/news',\n            params: {\n              action: 'delete'\n            },\n            data: {\n              id: id\n            }\n        });\n        return request.then(handleSuccess, handleError);\n      }\n\n      // Local service methods\n      function handleError(response){\n          if( !angular.isObject(response.data) || !response.data.message ){\n            return $q.reject('an unknown error occured');\n          } else {\n            return $q.reject(response.data.message);\n          }\n      }\n\n      function handleSuccess(response) {\n          return response.data;\n      }\n      \n\n      // Public API methods for this service\n      return({\n          getNews: getNews,\n          addNews: addNews,\n          removeNews: removeNews\n      });\n  }]);\n"],"sourceRoot":"/source/"}